//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var result_ttypes = require('./result_types')


var ttypes = require('./baseTemplate_types');
//HELPER FUNCTIONS AND STRUCTURES

BaseTemplateServ_addStorehouse_args = function(args) {
  this.storehouse = null;
  if (args) {
    if (args.storehouse !== undefined) {
      this.storehouse = args.storehouse;
    }
  }
};
BaseTemplateServ_addStorehouse_args.prototype = {};
BaseTemplateServ_addStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.storehouse = new ttypes.Storehouse();
        this.storehouse.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_addStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_addStorehouse_args');
  if (this.storehouse !== null && this.storehouse !== undefined) {
    output.writeFieldBegin('storehouse', Thrift.Type.STRUCT, 1);
    this.storehouse.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_addStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_addStorehouse_result.prototype = {};
BaseTemplateServ_addStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.StringResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_addStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_addStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_updateStorehouse_args = function(args) {
  this.storehouse = null;
  if (args) {
    if (args.storehouse !== undefined) {
      this.storehouse = args.storehouse;
    }
  }
};
BaseTemplateServ_updateStorehouse_args.prototype = {};
BaseTemplateServ_updateStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.storehouse = new ttypes.Storehouse();
        this.storehouse.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_updateStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_updateStorehouse_args');
  if (this.storehouse !== null && this.storehouse !== undefined) {
    output.writeFieldBegin('storehouse', Thrift.Type.STRUCT, 1);
    this.storehouse.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_updateStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_updateStorehouse_result.prototype = {};
BaseTemplateServ_updateStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_updateStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_updateStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouse_args = function(args) {
  this.sellerId = null;
  this.id = null;
  if (args) {
    if (args.sellerId !== undefined) {
      this.sellerId = args.sellerId;
    }
    if (args.id !== undefined) {
      this.id = args.id;
    }
  }
};
BaseTemplateServ_deleteStorehouse_args.prototype = {};
BaseTemplateServ_deleteStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sellerId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deleteStorehouse_args');
  if (this.sellerId !== null && this.sellerId !== undefined) {
    output.writeFieldBegin('sellerId', Thrift.Type.I32, 1);
    output.writeI32(this.sellerId);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 2);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_deleteStorehouse_result.prototype = {};
BaseTemplateServ_deleteStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deleteStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouseBatch_args = function(args) {
  this.storehouseList = null;
  if (args) {
    if (args.storehouseList !== undefined) {
      this.storehouseList = args.storehouseList;
    }
  }
};
BaseTemplateServ_deleteStorehouseBatch_args.prototype = {};
BaseTemplateServ_deleteStorehouseBatch_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size72 = 0;
        var _rtmp376;
        this.storehouseList = [];
        var _etype75 = 0;
        _rtmp376 = input.readListBegin();
        _etype75 = _rtmp376.etype;
        _size72 = _rtmp376.size;
        for (var _i77 = 0; _i77 < _size72; ++_i77)
        {
          var elem78 = null;
          elem78 = new ttypes.Storehouse();
          elem78.read(input);
          this.storehouseList.push(elem78);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouseBatch_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deleteStorehouseBatch_args');
  if (this.storehouseList !== null && this.storehouseList !== undefined) {
    output.writeFieldBegin('storehouseList', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.storehouseList.length);
    for (var iter79 in this.storehouseList)
    {
      if (this.storehouseList.hasOwnProperty(iter79))
      {
        iter79 = this.storehouseList[iter79];
        iter79.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouseBatch_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_deleteStorehouseBatch_result.prototype = {};
BaseTemplateServ_deleteStorehouseBatch_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deleteStorehouseBatch_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deleteStorehouseBatch_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_queryStorehouse_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
BaseTemplateServ_queryStorehouse_args.prototype = {};
BaseTemplateServ_queryStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.StorehouseQueryParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_queryStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_queryStorehouse_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_queryStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_queryStorehouse_result.prototype = {};
BaseTemplateServ_queryStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.StorehouseResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_queryStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_queryStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getStorehouse_args = function(args) {
  this.storehouseIds = null;
  if (args) {
    if (args.storehouseIds !== undefined) {
      this.storehouseIds = args.storehouseIds;
    }
  }
};
BaseTemplateServ_getStorehouse_args.prototype = {};
BaseTemplateServ_getStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size80 = 0;
        var _rtmp384;
        this.storehouseIds = [];
        var _etype83 = 0;
        _rtmp384 = input.readListBegin();
        _etype83 = _rtmp384.etype;
        _size80 = _rtmp384.size;
        for (var _i85 = 0; _i85 < _size80; ++_i85)
        {
          var elem86 = null;
          elem86 = input.readI32();
          this.storehouseIds.push(elem86);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getStorehouse_args');
  if (this.storehouseIds !== null && this.storehouseIds !== undefined) {
    output.writeFieldBegin('storehouseIds', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I32, this.storehouseIds.length);
    for (var iter87 in this.storehouseIds)
    {
      if (this.storehouseIds.hasOwnProperty(iter87))
      {
        iter87 = this.storehouseIds[iter87];
        output.writeI32(iter87);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_getStorehouse_result.prototype = {};
BaseTemplateServ_getStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.StorehouseResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getDeliverStorehouse_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
BaseTemplateServ_getDeliverStorehouse_args.prototype = {};
BaseTemplateServ_getDeliverStorehouse_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.DeliverStorehouseParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getDeliverStorehouse_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getDeliverStorehouse_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getDeliverStorehouse_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_getDeliverStorehouse_result.prototype = {};
BaseTemplateServ_getDeliverStorehouse_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.DeliverStorehouseResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getDeliverStorehouse_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getDeliverStorehouse_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_addPostageTemplate_args = function(args) {
  this.postageTemplate = null;
  if (args) {
    if (args.postageTemplate !== undefined) {
      this.postageTemplate = args.postageTemplate;
    }
  }
};
BaseTemplateServ_addPostageTemplate_args.prototype = {};
BaseTemplateServ_addPostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.postageTemplate = new ttypes.PostageTemplate();
        this.postageTemplate.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_addPostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_addPostageTemplate_args');
  if (this.postageTemplate !== null && this.postageTemplate !== undefined) {
    output.writeFieldBegin('postageTemplate', Thrift.Type.STRUCT, 1);
    this.postageTemplate.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_addPostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_addPostageTemplate_result.prototype = {};
BaseTemplateServ_addPostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.StringResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_addPostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_addPostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_updatePostageTemplate_args = function(args) {
  this.postageTemplate = null;
  if (args) {
    if (args.postageTemplate !== undefined) {
      this.postageTemplate = args.postageTemplate;
    }
  }
};
BaseTemplateServ_updatePostageTemplate_args.prototype = {};
BaseTemplateServ_updatePostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.postageTemplate = new ttypes.PostageTemplate();
        this.postageTemplate.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_updatePostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_updatePostageTemplate_args');
  if (this.postageTemplate !== null && this.postageTemplate !== undefined) {
    output.writeFieldBegin('postageTemplate', Thrift.Type.STRUCT, 1);
    this.postageTemplate.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_updatePostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_updatePostageTemplate_result.prototype = {};
BaseTemplateServ_updatePostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_updatePostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_updatePostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplate_args = function(args) {
  this.sellerId = null;
  this.id = null;
  if (args) {
    if (args.sellerId !== undefined) {
      this.sellerId = args.sellerId;
    }
    if (args.id !== undefined) {
      this.id = args.id;
    }
  }
};
BaseTemplateServ_deletePostageTemplate_args.prototype = {};
BaseTemplateServ_deletePostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sellerId = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deletePostageTemplate_args');
  if (this.sellerId !== null && this.sellerId !== undefined) {
    output.writeFieldBegin('sellerId', Thrift.Type.I32, 1);
    output.writeI32(this.sellerId);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 2);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_deletePostageTemplate_result.prototype = {};
BaseTemplateServ_deletePostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deletePostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplateBatch_args = function(args) {
  this.postageTemplateList = null;
  if (args) {
    if (args.postageTemplateList !== undefined) {
      this.postageTemplateList = args.postageTemplateList;
    }
  }
};
BaseTemplateServ_deletePostageTemplateBatch_args.prototype = {};
BaseTemplateServ_deletePostageTemplateBatch_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size88 = 0;
        var _rtmp392;
        this.postageTemplateList = [];
        var _etype91 = 0;
        _rtmp392 = input.readListBegin();
        _etype91 = _rtmp392.etype;
        _size88 = _rtmp392.size;
        for (var _i93 = 0; _i93 < _size88; ++_i93)
        {
          var elem94 = null;
          elem94 = new ttypes.PostageTemplate();
          elem94.read(input);
          this.postageTemplateList.push(elem94);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplateBatch_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deletePostageTemplateBatch_args');
  if (this.postageTemplateList !== null && this.postageTemplateList !== undefined) {
    output.writeFieldBegin('postageTemplateList', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.postageTemplateList.length);
    for (var iter95 in this.postageTemplateList)
    {
      if (this.postageTemplateList.hasOwnProperty(iter95))
      {
        iter95 = this.postageTemplateList[iter95];
        iter95.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplateBatch_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_deletePostageTemplateBatch_result.prototype = {};
BaseTemplateServ_deletePostageTemplateBatch_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_deletePostageTemplateBatch_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_deletePostageTemplateBatch_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_queryPostageTemplate_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
BaseTemplateServ_queryPostageTemplate_args.prototype = {};
BaseTemplateServ_queryPostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.PostageTemplateQueryParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_queryPostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_queryPostageTemplate_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_queryPostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_queryPostageTemplate_result.prototype = {};
BaseTemplateServ_queryPostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PostageTemplateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_queryPostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_queryPostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getPostageTemplate_args = function(args) {
  this.postageTemplateIds = null;
  if (args) {
    if (args.postageTemplateIds !== undefined) {
      this.postageTemplateIds = args.postageTemplateIds;
    }
  }
};
BaseTemplateServ_getPostageTemplate_args.prototype = {};
BaseTemplateServ_getPostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size96 = 0;
        var _rtmp3100;
        this.postageTemplateIds = [];
        var _etype99 = 0;
        _rtmp3100 = input.readListBegin();
        _etype99 = _rtmp3100.etype;
        _size96 = _rtmp3100.size;
        for (var _i101 = 0; _i101 < _size96; ++_i101)
        {
          var elem102 = null;
          elem102 = input.readI32();
          this.postageTemplateIds.push(elem102);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getPostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getPostageTemplate_args');
  if (this.postageTemplateIds !== null && this.postageTemplateIds !== undefined) {
    output.writeFieldBegin('postageTemplateIds', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.I32, this.postageTemplateIds.length);
    for (var iter103 in this.postageTemplateIds)
    {
      if (this.postageTemplateIds.hasOwnProperty(iter103))
      {
        iter103 = this.postageTemplateIds[iter103];
        output.writeI32(iter103);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getPostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_getPostageTemplate_result.prototype = {};
BaseTemplateServ_getPostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PostageTemplateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getPostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getPostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getSellerPostageTemplate_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
BaseTemplateServ_getSellerPostageTemplate_args.prototype = {};
BaseTemplateServ_getSellerPostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case -1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.SellerPostageTemplateParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getSellerPostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getSellerPostageTemplate_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, -1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_getSellerPostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_getSellerPostageTemplate_result.prototype = {};
BaseTemplateServ_getSellerPostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.PostageTemplateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_getSellerPostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_getSellerPostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_setDefaultPostageTemplate_args = function(args) {
  this.postageTemplate = null;
  if (args) {
    if (args.postageTemplate !== undefined) {
      this.postageTemplate = args.postageTemplate;
    }
  }
};
BaseTemplateServ_setDefaultPostageTemplate_args.prototype = {};
BaseTemplateServ_setDefaultPostageTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case -1:
      if (ftype == Thrift.Type.STRUCT) {
        this.postageTemplate = new ttypes.PostageTemplate();
        this.postageTemplate.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_setDefaultPostageTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_setDefaultPostageTemplate_args');
  if (this.postageTemplate !== null && this.postageTemplate !== undefined) {
    output.writeFieldBegin('postageTemplate', Thrift.Type.STRUCT, -1);
    this.postageTemplate.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_setDefaultPostageTemplate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_setDefaultPostageTemplate_result.prototype = {};
BaseTemplateServ_setDefaultPostageTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new result_ttypes.Result();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_setDefaultPostageTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_setDefaultPostageTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_calculatePostage_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
BaseTemplateServ_calculatePostage_args.prototype = {};
BaseTemplateServ_calculatePostage_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case -1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.CalculatePostageParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_calculatePostage_args.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_calculatePostage_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, -1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServ_calculatePostage_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
BaseTemplateServ_calculatePostage_result.prototype = {};
BaseTemplateServ_calculatePostage_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CalculatePostageResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BaseTemplateServ_calculatePostage_result.prototype.write = function(output) {
  output.writeStructBegin('BaseTemplateServ_calculatePostage_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BaseTemplateServClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
BaseTemplateServClient.prototype = {};
BaseTemplateServClient.prototype.seqid = function() { return this._seqid; }
BaseTemplateServClient.prototype.new_seqid = function() { return this._seqid += 1; }
BaseTemplateServClient.prototype.addStorehouse = function(storehouse, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addStorehouse(storehouse);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addStorehouse(storehouse);
  }
};

BaseTemplateServClient.prototype.send_addStorehouse = function(storehouse) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_addStorehouse_args();
  args.storehouse = storehouse;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_addStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_addStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.updateStorehouse = function(storehouse, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updateStorehouse(storehouse);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updateStorehouse(storehouse);
  }
};

BaseTemplateServClient.prototype.send_updateStorehouse = function(storehouse) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updateStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_updateStorehouse_args();
  args.storehouse = storehouse;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_updateStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_updateStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('updateStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.deleteStorehouse = function(sellerId, id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteStorehouse(sellerId, id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteStorehouse(sellerId, id);
  }
};

BaseTemplateServClient.prototype.send_deleteStorehouse = function(sellerId, id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('deleteStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_deleteStorehouse_args();
  args.sellerId = sellerId;
  args.id = id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_deleteStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_deleteStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('deleteStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.deleteStorehouseBatch = function(storehouseList, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deleteStorehouseBatch(storehouseList);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deleteStorehouseBatch(storehouseList);
  }
};

BaseTemplateServClient.prototype.send_deleteStorehouseBatch = function(storehouseList) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('deleteStorehouseBatch', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_deleteStorehouseBatch_args();
  args.storehouseList = storehouseList;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_deleteStorehouseBatch = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_deleteStorehouseBatch_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('deleteStorehouseBatch failed: unknown result');
};
BaseTemplateServClient.prototype.queryStorehouse = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryStorehouse(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryStorehouse(param);
  }
};

BaseTemplateServClient.prototype.send_queryStorehouse = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_queryStorehouse_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_queryStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_queryStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.getStorehouse = function(storehouseIds, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getStorehouse(storehouseIds);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getStorehouse(storehouseIds);
  }
};

BaseTemplateServClient.prototype.send_getStorehouse = function(storehouseIds) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_getStorehouse_args();
  args.storehouseIds = storehouseIds;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_getStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_getStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.getDeliverStorehouse = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getDeliverStorehouse(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getDeliverStorehouse(param);
  }
};

BaseTemplateServClient.prototype.send_getDeliverStorehouse = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDeliverStorehouse', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_getDeliverStorehouse_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_getDeliverStorehouse = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_getDeliverStorehouse_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDeliverStorehouse failed: unknown result');
};
BaseTemplateServClient.prototype.addPostageTemplate = function(postageTemplate, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_addPostageTemplate(postageTemplate);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_addPostageTemplate(postageTemplate);
  }
};

BaseTemplateServClient.prototype.send_addPostageTemplate = function(postageTemplate) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('addPostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_addPostageTemplate_args();
  args.postageTemplate = postageTemplate;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_addPostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_addPostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('addPostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.updatePostageTemplate = function(postageTemplate, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_updatePostageTemplate(postageTemplate);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_updatePostageTemplate(postageTemplate);
  }
};

BaseTemplateServClient.prototype.send_updatePostageTemplate = function(postageTemplate) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('updatePostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_updatePostageTemplate_args();
  args.postageTemplate = postageTemplate;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_updatePostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_updatePostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('updatePostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.deletePostageTemplate = function(sellerId, id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deletePostageTemplate(sellerId, id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deletePostageTemplate(sellerId, id);
  }
};

BaseTemplateServClient.prototype.send_deletePostageTemplate = function(sellerId, id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('deletePostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_deletePostageTemplate_args();
  args.sellerId = sellerId;
  args.id = id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_deletePostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_deletePostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('deletePostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.deletePostageTemplateBatch = function(postageTemplateList, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_deletePostageTemplateBatch(postageTemplateList);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_deletePostageTemplateBatch(postageTemplateList);
  }
};

BaseTemplateServClient.prototype.send_deletePostageTemplateBatch = function(postageTemplateList) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('deletePostageTemplateBatch', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_deletePostageTemplateBatch_args();
  args.postageTemplateList = postageTemplateList;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_deletePostageTemplateBatch = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_deletePostageTemplateBatch_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('deletePostageTemplateBatch failed: unknown result');
};
BaseTemplateServClient.prototype.queryPostageTemplate = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryPostageTemplate(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryPostageTemplate(param);
  }
};

BaseTemplateServClient.prototype.send_queryPostageTemplate = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryPostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_queryPostageTemplate_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_queryPostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_queryPostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryPostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.getPostageTemplate = function(postageTemplateIds, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getPostageTemplate(postageTemplateIds);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getPostageTemplate(postageTemplateIds);
  }
};

BaseTemplateServClient.prototype.send_getPostageTemplate = function(postageTemplateIds) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getPostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_getPostageTemplate_args();
  args.postageTemplateIds = postageTemplateIds;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_getPostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_getPostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getPostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.getSellerPostageTemplate = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getSellerPostageTemplate(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getSellerPostageTemplate(param);
  }
};

BaseTemplateServClient.prototype.send_getSellerPostageTemplate = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getSellerPostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_getSellerPostageTemplate_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_getSellerPostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_getSellerPostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getSellerPostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.setDefaultPostageTemplate = function(postageTemplate, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setDefaultPostageTemplate(postageTemplate);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setDefaultPostageTemplate(postageTemplate);
  }
};

BaseTemplateServClient.prototype.send_setDefaultPostageTemplate = function(postageTemplate) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setDefaultPostageTemplate', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_setDefaultPostageTemplate_args();
  args.postageTemplate = postageTemplate;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_setDefaultPostageTemplate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_setDefaultPostageTemplate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setDefaultPostageTemplate failed: unknown result');
};
BaseTemplateServClient.prototype.calculatePostage = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_calculatePostage(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_calculatePostage(param);
  }
};

BaseTemplateServClient.prototype.send_calculatePostage = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('calculatePostage', Thrift.MessageType.CALL, this.seqid());
  var args = new BaseTemplateServ_calculatePostage_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

BaseTemplateServClient.prototype.recv_calculatePostage = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new BaseTemplateServ_calculatePostage_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('calculatePostage failed: unknown result');
};
BaseTemplateServProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
BaseTemplateServProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

BaseTemplateServProcessor.prototype.process_addStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_addStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addStorehouse.length === 1) {
    Q.fcall(this._handler.addStorehouse, args.storehouse)
      .then(function(result) {
        var result = new BaseTemplateServ_addStorehouse_result({success: result});
        output.writeMessageBegin("addStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_addStorehouse_result(err);
        output.writeMessageBegin("addStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.addStorehouse(args.storehouse,  function (err, result) {
      var result = new BaseTemplateServ_addStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("addStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_updateStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_updateStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updateStorehouse.length === 1) {
    Q.fcall(this._handler.updateStorehouse, args.storehouse)
      .then(function(result) {
        var result = new BaseTemplateServ_updateStorehouse_result({success: result});
        output.writeMessageBegin("updateStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_updateStorehouse_result(err);
        output.writeMessageBegin("updateStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.updateStorehouse(args.storehouse,  function (err, result) {
      var result = new BaseTemplateServ_updateStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("updateStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_deleteStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_deleteStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteStorehouse.length === 2) {
    Q.fcall(this._handler.deleteStorehouse, args.sellerId, args.id)
      .then(function(result) {
        var result = new BaseTemplateServ_deleteStorehouse_result({success: result});
        output.writeMessageBegin("deleteStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_deleteStorehouse_result(err);
        output.writeMessageBegin("deleteStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.deleteStorehouse(args.sellerId, args.id,  function (err, result) {
      var result = new BaseTemplateServ_deleteStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("deleteStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_deleteStorehouseBatch = function(seqid, input, output) {
  var args = new BaseTemplateServ_deleteStorehouseBatch_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deleteStorehouseBatch.length === 1) {
    Q.fcall(this._handler.deleteStorehouseBatch, args.storehouseList)
      .then(function(result) {
        var result = new BaseTemplateServ_deleteStorehouseBatch_result({success: result});
        output.writeMessageBegin("deleteStorehouseBatch", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_deleteStorehouseBatch_result(err);
        output.writeMessageBegin("deleteStorehouseBatch", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.deleteStorehouseBatch(args.storehouseList,  function (err, result) {
      var result = new BaseTemplateServ_deleteStorehouseBatch_result((err != null ? err : {success: result}));
      output.writeMessageBegin("deleteStorehouseBatch", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_queryStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_queryStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryStorehouse.length === 1) {
    Q.fcall(this._handler.queryStorehouse, args.param)
      .then(function(result) {
        var result = new BaseTemplateServ_queryStorehouse_result({success: result});
        output.writeMessageBegin("queryStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_queryStorehouse_result(err);
        output.writeMessageBegin("queryStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryStorehouse(args.param,  function (err, result) {
      var result = new BaseTemplateServ_queryStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_getStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_getStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getStorehouse.length === 1) {
    Q.fcall(this._handler.getStorehouse, args.storehouseIds)
      .then(function(result) {
        var result = new BaseTemplateServ_getStorehouse_result({success: result});
        output.writeMessageBegin("getStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_getStorehouse_result(err);
        output.writeMessageBegin("getStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getStorehouse(args.storehouseIds,  function (err, result) {
      var result = new BaseTemplateServ_getStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_getDeliverStorehouse = function(seqid, input, output) {
  var args = new BaseTemplateServ_getDeliverStorehouse_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getDeliverStorehouse.length === 1) {
    Q.fcall(this._handler.getDeliverStorehouse, args.param)
      .then(function(result) {
        var result = new BaseTemplateServ_getDeliverStorehouse_result({success: result});
        output.writeMessageBegin("getDeliverStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_getDeliverStorehouse_result(err);
        output.writeMessageBegin("getDeliverStorehouse", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getDeliverStorehouse(args.param,  function (err, result) {
      var result = new BaseTemplateServ_getDeliverStorehouse_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getDeliverStorehouse", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_addPostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_addPostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.addPostageTemplate.length === 1) {
    Q.fcall(this._handler.addPostageTemplate, args.postageTemplate)
      .then(function(result) {
        var result = new BaseTemplateServ_addPostageTemplate_result({success: result});
        output.writeMessageBegin("addPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_addPostageTemplate_result(err);
        output.writeMessageBegin("addPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.addPostageTemplate(args.postageTemplate,  function (err, result) {
      var result = new BaseTemplateServ_addPostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("addPostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_updatePostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_updatePostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.updatePostageTemplate.length === 1) {
    Q.fcall(this._handler.updatePostageTemplate, args.postageTemplate)
      .then(function(result) {
        var result = new BaseTemplateServ_updatePostageTemplate_result({success: result});
        output.writeMessageBegin("updatePostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_updatePostageTemplate_result(err);
        output.writeMessageBegin("updatePostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.updatePostageTemplate(args.postageTemplate,  function (err, result) {
      var result = new BaseTemplateServ_updatePostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("updatePostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_deletePostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_deletePostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deletePostageTemplate.length === 2) {
    Q.fcall(this._handler.deletePostageTemplate, args.sellerId, args.id)
      .then(function(result) {
        var result = new BaseTemplateServ_deletePostageTemplate_result({success: result});
        output.writeMessageBegin("deletePostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_deletePostageTemplate_result(err);
        output.writeMessageBegin("deletePostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.deletePostageTemplate(args.sellerId, args.id,  function (err, result) {
      var result = new BaseTemplateServ_deletePostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("deletePostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_deletePostageTemplateBatch = function(seqid, input, output) {
  var args = new BaseTemplateServ_deletePostageTemplateBatch_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.deletePostageTemplateBatch.length === 1) {
    Q.fcall(this._handler.deletePostageTemplateBatch, args.postageTemplateList)
      .then(function(result) {
        var result = new BaseTemplateServ_deletePostageTemplateBatch_result({success: result});
        output.writeMessageBegin("deletePostageTemplateBatch", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_deletePostageTemplateBatch_result(err);
        output.writeMessageBegin("deletePostageTemplateBatch", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.deletePostageTemplateBatch(args.postageTemplateList,  function (err, result) {
      var result = new BaseTemplateServ_deletePostageTemplateBatch_result((err != null ? err : {success: result}));
      output.writeMessageBegin("deletePostageTemplateBatch", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_queryPostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_queryPostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryPostageTemplate.length === 1) {
    Q.fcall(this._handler.queryPostageTemplate, args.param)
      .then(function(result) {
        var result = new BaseTemplateServ_queryPostageTemplate_result({success: result});
        output.writeMessageBegin("queryPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_queryPostageTemplate_result(err);
        output.writeMessageBegin("queryPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryPostageTemplate(args.param,  function (err, result) {
      var result = new BaseTemplateServ_queryPostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryPostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_getPostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_getPostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getPostageTemplate.length === 1) {
    Q.fcall(this._handler.getPostageTemplate, args.postageTemplateIds)
      .then(function(result) {
        var result = new BaseTemplateServ_getPostageTemplate_result({success: result});
        output.writeMessageBegin("getPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_getPostageTemplate_result(err);
        output.writeMessageBegin("getPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getPostageTemplate(args.postageTemplateIds,  function (err, result) {
      var result = new BaseTemplateServ_getPostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getPostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_getSellerPostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_getSellerPostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getSellerPostageTemplate.length === 1) {
    Q.fcall(this._handler.getSellerPostageTemplate, args.param)
      .then(function(result) {
        var result = new BaseTemplateServ_getSellerPostageTemplate_result({success: result});
        output.writeMessageBegin("getSellerPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_getSellerPostageTemplate_result(err);
        output.writeMessageBegin("getSellerPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getSellerPostageTemplate(args.param,  function (err, result) {
      var result = new BaseTemplateServ_getSellerPostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getSellerPostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_setDefaultPostageTemplate = function(seqid, input, output) {
  var args = new BaseTemplateServ_setDefaultPostageTemplate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setDefaultPostageTemplate.length === 1) {
    Q.fcall(this._handler.setDefaultPostageTemplate, args.postageTemplate)
      .then(function(result) {
        var result = new BaseTemplateServ_setDefaultPostageTemplate_result({success: result});
        output.writeMessageBegin("setDefaultPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_setDefaultPostageTemplate_result(err);
        output.writeMessageBegin("setDefaultPostageTemplate", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.setDefaultPostageTemplate(args.postageTemplate,  function (err, result) {
      var result = new BaseTemplateServ_setDefaultPostageTemplate_result((err != null ? err : {success: result}));
      output.writeMessageBegin("setDefaultPostageTemplate", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

BaseTemplateServProcessor.prototype.process_calculatePostage = function(seqid, input, output) {
  var args = new BaseTemplateServ_calculatePostage_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.calculatePostage.length === 1) {
    Q.fcall(this._handler.calculatePostage, args.param)
      .then(function(result) {
        var result = new BaseTemplateServ_calculatePostage_result({success: result});
        output.writeMessageBegin("calculatePostage", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new BaseTemplateServ_calculatePostage_result(err);
        output.writeMessageBegin("calculatePostage", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.calculatePostage(args.param,  function (err, result) {
      var result = new BaseTemplateServ_calculatePostage_result((err != null ? err : {success: result}));
      output.writeMessageBegin("calculatePostage", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

