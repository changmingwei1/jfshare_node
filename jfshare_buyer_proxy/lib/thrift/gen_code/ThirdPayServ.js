//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var result_ttypes = require('./result_types')
var pagination_ttypes = require('./pagination_types')


var ttypes = require('./thirdpay_types');
//HELPER FUNCTIONS AND STRUCTURES

ThirdPayServ_thirdPayApply_args = function(args) {
  this.requestXml = null;
  if (args) {
    if (args.requestXml !== undefined) {
      this.requestXml = args.requestXml;
    }
  }
};
ThirdPayServ_thirdPayApply_args.prototype = {};
ThirdPayServ_thirdPayApply_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.requestXml = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayApply_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayApply_args');
  if (this.requestXml !== null && this.requestXml !== undefined) {
    output.writeFieldBegin('requestXml', Thrift.Type.STRING, 1);
    output.writeString(this.requestXml);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPayApply_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_thirdPayApply_result.prototype = {};
ThirdPayServ_thirdPayApply_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ThirdPayApplyResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayApply_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayApply_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPayLogin_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
ThirdPayServ_thirdPayLogin_args.prototype = {};
ThirdPayServ_thirdPayLogin_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.ThirdPayLoginParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayLogin_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayLogin_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPayLogin_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_thirdPayLogin_result.prototype = {};
ThirdPayServ_thirdPayLogin_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ThirdPayLoginResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayLogin_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayLogin_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPay_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
ThirdPayServ_thirdPay_args.prototype = {};
ThirdPayServ_thirdPay_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.ThirdPayParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPay_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPay_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPay_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_thirdPay_result.prototype = {};
ThirdPayServ_thirdPay_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ThirdPayResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPay_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPay_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPayRefund_args = function(args) {
  this.requestXml = null;
  if (args) {
    if (args.requestXml !== undefined) {
      this.requestXml = args.requestXml;
    }
  }
};
ThirdPayServ_thirdPayRefund_args.prototype = {};
ThirdPayServ_thirdPayRefund_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.requestXml = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayRefund_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayRefund_args');
  if (this.requestXml !== null && this.requestXml !== undefined) {
    output.writeFieldBegin('requestXml', Thrift.Type.STRING, 1);
    output.writeString(this.requestXml);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_thirdPayRefund_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_thirdPayRefund_result.prototype = {};
ThirdPayServ_thirdPayRefund_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ThirdPayRefundResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_thirdPayRefund_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_thirdPayRefund_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_queryThirdPayApplyLog_args = function(args) {
  this.param = null;
  this.pagination = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
    if (args.pagination !== undefined) {
      this.pagination = args.pagination;
    }
  }
};
ThirdPayServ_queryThirdPayApplyLog_args.prototype = {};
ThirdPayServ_queryThirdPayApplyLog_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.QueryThirdPayApplyLogParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination = new pagination_ttypes.Pagination();
        this.pagination.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_queryThirdPayApplyLog_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_queryThirdPayApplyLog_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  if (this.pagination !== null && this.pagination !== undefined) {
    output.writeFieldBegin('pagination', Thrift.Type.STRUCT, 2);
    this.pagination.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_queryThirdPayApplyLog_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_queryThirdPayApplyLog_result.prototype = {};
ThirdPayServ_queryThirdPayApplyLog_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.QueryThirdPayApplyLogResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_queryThirdPayApplyLog_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_queryThirdPayApplyLog_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_exprotThirdPayLog_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
ThirdPayServ_exprotThirdPayLog_args.prototype = {};
ThirdPayServ_exprotThirdPayLog_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.ExprotParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_exprotThirdPayLog_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_exprotThirdPayLog_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_exprotThirdPayLog_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_exprotThirdPayLog_result.prototype = {};
ThirdPayServ_exprotThirdPayLog_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ExprotResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_exprotThirdPayLog_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_exprotThirdPayLog_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_managerRefund_args = function(args) {
  this.param = null;
  if (args) {
    if (args.param !== undefined) {
      this.param = args.param;
    }
  }
};
ThirdPayServ_managerRefund_args.prototype = {};
ThirdPayServ_managerRefund_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.param = new ttypes.ManagerRefundParam();
        this.param.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_managerRefund_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_managerRefund_args');
  if (this.param !== null && this.param !== undefined) {
    output.writeFieldBegin('param', Thrift.Type.STRUCT, 1);
    this.param.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_managerRefund_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_managerRefund_result.prototype = {};
ThirdPayServ_managerRefund_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.ManagerRefundResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_managerRefund_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_managerRefund_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_getPayOrderInfo_args = function(args) {
  this.requestXml = null;
  if (args) {
    if (args.requestXml !== undefined) {
      this.requestXml = args.requestXml;
    }
  }
};
ThirdPayServ_getPayOrderInfo_args.prototype = {};
ThirdPayServ_getPayOrderInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.requestXml = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_getPayOrderInfo_args.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_getPayOrderInfo_args');
  if (this.requestXml !== null && this.requestXml !== undefined) {
    output.writeFieldBegin('requestXml', Thrift.Type.STRING, 1);
    output.writeString(this.requestXml);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServ_getPayOrderInfo_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
ThirdPayServ_getPayOrderInfo_result.prototype = {};
ThirdPayServ_getPayOrderInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.GetPayOrderInfoResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ThirdPayServ_getPayOrderInfo_result.prototype.write = function(output) {
  output.writeStructBegin('ThirdPayServ_getPayOrderInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ThirdPayServClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
ThirdPayServClient.prototype = {};
ThirdPayServClient.prototype.seqid = function() { return this._seqid; }
ThirdPayServClient.prototype.new_seqid = function() { return this._seqid += 1; }
ThirdPayServClient.prototype.thirdPayApply = function(requestXml, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_thirdPayApply(requestXml);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_thirdPayApply(requestXml);
  }
};

ThirdPayServClient.prototype.send_thirdPayApply = function(requestXml) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('thirdPayApply', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_thirdPayApply_args();
  args.requestXml = requestXml;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_thirdPayApply = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_thirdPayApply_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('thirdPayApply failed: unknown result');
};
ThirdPayServClient.prototype.thirdPayLogin = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_thirdPayLogin(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_thirdPayLogin(param);
  }
};

ThirdPayServClient.prototype.send_thirdPayLogin = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('thirdPayLogin', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_thirdPayLogin_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_thirdPayLogin = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_thirdPayLogin_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('thirdPayLogin failed: unknown result');
};
ThirdPayServClient.prototype.thirdPay = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_thirdPay(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_thirdPay(param);
  }
};

ThirdPayServClient.prototype.send_thirdPay = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('thirdPay', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_thirdPay_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_thirdPay = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_thirdPay_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('thirdPay failed: unknown result');
};
ThirdPayServClient.prototype.thirdPayRefund = function(requestXml, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_thirdPayRefund(requestXml);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_thirdPayRefund(requestXml);
  }
};

ThirdPayServClient.prototype.send_thirdPayRefund = function(requestXml) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('thirdPayRefund', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_thirdPayRefund_args();
  args.requestXml = requestXml;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_thirdPayRefund = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_thirdPayRefund_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('thirdPayRefund failed: unknown result');
};
ThirdPayServClient.prototype.queryThirdPayApplyLog = function(param, pagination, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryThirdPayApplyLog(param, pagination);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryThirdPayApplyLog(param, pagination);
  }
};

ThirdPayServClient.prototype.send_queryThirdPayApplyLog = function(param, pagination) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryThirdPayApplyLog', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_queryThirdPayApplyLog_args();
  args.param = param;
  args.pagination = pagination;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_queryThirdPayApplyLog = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_queryThirdPayApplyLog_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryThirdPayApplyLog failed: unknown result');
};
ThirdPayServClient.prototype.exprotThirdPayLog = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_exprotThirdPayLog(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_exprotThirdPayLog(param);
  }
};

ThirdPayServClient.prototype.send_exprotThirdPayLog = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('exprotThirdPayLog', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_exprotThirdPayLog_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_exprotThirdPayLog = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_exprotThirdPayLog_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('exprotThirdPayLog failed: unknown result');
};
ThirdPayServClient.prototype.managerRefund = function(param, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_managerRefund(param);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_managerRefund(param);
  }
};

ThirdPayServClient.prototype.send_managerRefund = function(param) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('managerRefund', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_managerRefund_args();
  args.param = param;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_managerRefund = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_managerRefund_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('managerRefund failed: unknown result');
};
ThirdPayServClient.prototype.getPayOrderInfo = function(requestXml, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getPayOrderInfo(requestXml);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getPayOrderInfo(requestXml);
  }
};

ThirdPayServClient.prototype.send_getPayOrderInfo = function(requestXml) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getPayOrderInfo', Thrift.MessageType.CALL, this.seqid());
  var args = new ThirdPayServ_getPayOrderInfo_args();
  args.requestXml = requestXml;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ThirdPayServClient.prototype.recv_getPayOrderInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ThirdPayServ_getPayOrderInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getPayOrderInfo failed: unknown result');
};
ThirdPayServProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
ThirdPayServProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

ThirdPayServProcessor.prototype.process_thirdPayApply = function(seqid, input, output) {
  var args = new ThirdPayServ_thirdPayApply_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.thirdPayApply.length === 1) {
    Q.fcall(this._handler.thirdPayApply, args.requestXml)
      .then(function(result) {
        var result = new ThirdPayServ_thirdPayApply_result({success: result});
        output.writeMessageBegin("thirdPayApply", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_thirdPayApply_result(err);
        output.writeMessageBegin("thirdPayApply", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.thirdPayApply(args.requestXml,  function (err, result) {
      var result = new ThirdPayServ_thirdPayApply_result((err != null ? err : {success: result}));
      output.writeMessageBegin("thirdPayApply", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_thirdPayLogin = function(seqid, input, output) {
  var args = new ThirdPayServ_thirdPayLogin_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.thirdPayLogin.length === 1) {
    Q.fcall(this._handler.thirdPayLogin, args.param)
      .then(function(result) {
        var result = new ThirdPayServ_thirdPayLogin_result({success: result});
        output.writeMessageBegin("thirdPayLogin", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_thirdPayLogin_result(err);
        output.writeMessageBegin("thirdPayLogin", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.thirdPayLogin(args.param,  function (err, result) {
      var result = new ThirdPayServ_thirdPayLogin_result((err != null ? err : {success: result}));
      output.writeMessageBegin("thirdPayLogin", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_thirdPay = function(seqid, input, output) {
  var args = new ThirdPayServ_thirdPay_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.thirdPay.length === 1) {
    Q.fcall(this._handler.thirdPay, args.param)
      .then(function(result) {
        var result = new ThirdPayServ_thirdPay_result({success: result});
        output.writeMessageBegin("thirdPay", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_thirdPay_result(err);
        output.writeMessageBegin("thirdPay", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.thirdPay(args.param,  function (err, result) {
      var result = new ThirdPayServ_thirdPay_result((err != null ? err : {success: result}));
      output.writeMessageBegin("thirdPay", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_thirdPayRefund = function(seqid, input, output) {
  var args = new ThirdPayServ_thirdPayRefund_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.thirdPayRefund.length === 1) {
    Q.fcall(this._handler.thirdPayRefund, args.requestXml)
      .then(function(result) {
        var result = new ThirdPayServ_thirdPayRefund_result({success: result});
        output.writeMessageBegin("thirdPayRefund", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_thirdPayRefund_result(err);
        output.writeMessageBegin("thirdPayRefund", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.thirdPayRefund(args.requestXml,  function (err, result) {
      var result = new ThirdPayServ_thirdPayRefund_result((err != null ? err : {success: result}));
      output.writeMessageBegin("thirdPayRefund", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_queryThirdPayApplyLog = function(seqid, input, output) {
  var args = new ThirdPayServ_queryThirdPayApplyLog_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryThirdPayApplyLog.length === 2) {
    Q.fcall(this._handler.queryThirdPayApplyLog, args.param, args.pagination)
      .then(function(result) {
        var result = new ThirdPayServ_queryThirdPayApplyLog_result({success: result});
        output.writeMessageBegin("queryThirdPayApplyLog", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_queryThirdPayApplyLog_result(err);
        output.writeMessageBegin("queryThirdPayApplyLog", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryThirdPayApplyLog(args.param, args.pagination,  function (err, result) {
      var result = new ThirdPayServ_queryThirdPayApplyLog_result((err != null ? err : {success: result}));
      output.writeMessageBegin("queryThirdPayApplyLog", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_exprotThirdPayLog = function(seqid, input, output) {
  var args = new ThirdPayServ_exprotThirdPayLog_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.exprotThirdPayLog.length === 1) {
    Q.fcall(this._handler.exprotThirdPayLog, args.param)
      .then(function(result) {
        var result = new ThirdPayServ_exprotThirdPayLog_result({success: result});
        output.writeMessageBegin("exprotThirdPayLog", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_exprotThirdPayLog_result(err);
        output.writeMessageBegin("exprotThirdPayLog", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.exprotThirdPayLog(args.param,  function (err, result) {
      var result = new ThirdPayServ_exprotThirdPayLog_result((err != null ? err : {success: result}));
      output.writeMessageBegin("exprotThirdPayLog", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_managerRefund = function(seqid, input, output) {
  var args = new ThirdPayServ_managerRefund_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.managerRefund.length === 1) {
    Q.fcall(this._handler.managerRefund, args.param)
      .then(function(result) {
        var result = new ThirdPayServ_managerRefund_result({success: result});
        output.writeMessageBegin("managerRefund", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_managerRefund_result(err);
        output.writeMessageBegin("managerRefund", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.managerRefund(args.param,  function (err, result) {
      var result = new ThirdPayServ_managerRefund_result((err != null ? err : {success: result}));
      output.writeMessageBegin("managerRefund", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

ThirdPayServProcessor.prototype.process_getPayOrderInfo = function(seqid, input, output) {
  var args = new ThirdPayServ_getPayOrderInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getPayOrderInfo.length === 1) {
    Q.fcall(this._handler.getPayOrderInfo, args.requestXml)
      .then(function(result) {
        var result = new ThirdPayServ_getPayOrderInfo_result({success: result});
        output.writeMessageBegin("getPayOrderInfo", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new ThirdPayServ_getPayOrderInfo_result(err);
        output.writeMessageBegin("getPayOrderInfo", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getPayOrderInfo(args.requestXml,  function (err, result) {
      var result = new ThirdPayServ_getPayOrderInfo_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getPayOrderInfo", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

